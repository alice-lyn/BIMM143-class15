---
title: "Homework6"
author: "Alice Lai (PID:A16799081)"
format: 
 pdf:
    colorlinks: true
---


# The original code 
```{r}
# install.packages("bio3d")
library(bio3d)
s1 <- read.pdb("4AKE")  # kinase with drug
s2 <- read.pdb("1AKE")  # kinase no drug
s3 <- read.pdb("1E4Y")  # kinase with drug
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s2.chainA <- trim.pdb(s2, chain="A", elety="CA")
s3.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
s2.b <- s2.chainA$atom$b
s3.b <- s3.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor")
plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")
```

Q6. How would you generalize the original code above to work with any set of input protein structures?

# My generalized version 
The following function takes a PDB coordinate as the argument and analyzes protein drug interactions and outputs a plot for the specified protein.
```{r}
# 'input' is the PDB coordinate 
plot <- function(input) {
  # reads the PDB coordinate file and stores it in the 'protein' object
  protein <- read.pdb(input)
  
  # trims the original protein into a smaller subset that only contains
  # chain A of the protein
  chainA <- trim.pdb(protein, chain="A", elety="CA")
  
  # extracts the B factor information from chain A
  Bfactor <- chainA$atom$b
  
  # plots the B-factor value against the residue positions 
  # The type of plot is set to a line plot
  plotb3(Bfactor, sse=chainA, typ="l", ylab="Bfactor")
}

plot("4AKE")
plot("1AKE")
plot("1E4Y")

```

